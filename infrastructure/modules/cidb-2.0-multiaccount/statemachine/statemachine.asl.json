{
    "Comment": "A description of my state machine",
    "QueryLanguage": "JSONata",
    "StartAt": "Parallel",
    "States": {
        "Parallel": {
            "Type": "Parallel",
            "End": true,
            "Branches": [
                {
                    "StartAt": "Lambda IAM",
                    "States": {
                        "Lambda IAM": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${lambda_IAM}",
                                "Payload": "{% $states.input %}"
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Lambda KMS",
                    "States": {
                        "Lambda KMS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${lambda_KMS}",
                                "Payload": "{% $states.input %}"
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                }
            ]
        }
    }
}